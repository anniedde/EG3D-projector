import numpy as np
import torch

import math
#
# def compute_rotation(angles):
#     x, y, z = angles
#     rot_x = np.array([
#         [1, 0, 0],
#         [0, np.cos(x), -np.sin(x)],
#         [0, np.sin(x), np.cos(x)]
#     ])
#     rot_y = np.array([
#         [np.cos(y), 0, np.sin(y)],
#         [0, 1, 0],
#         [-np.sin(y), 0, np.cos(y)]
#     ])
#     rot_z = np.array([
#         [np.cos(z), -np.sin(z), 0],
#         [np.sin(z), np.cos(z), 0],
#         [0, 0, 1]
#     ])
#     return np.matmul(rot_z, np.matmul(rot_y, rot_x))
#
#
# rotation_ = compute_rotation([ 0.0121,  0.3372, -0.0339])
# print(rotation_)

# c1 = np.array([[0.9422833919525146, 0.034289587289094925, 0.3330560326576233, -0.8367999667889383],
#                [0.03984849900007248, -0.9991570711135864, -0.009871904738247395, 0.017018394869192363],
#                [0.33243677020072937, 0.022573914378881454, -0.9428553581237793, 2.566997504832856],
#                [0.0, 0.0, 0.0, 1.0]])


c1 = np.array([[0.9422833919525146, 0.034289587289094925, 0.3330560326576233],
               [0.03984849900007248, -0.9991570711135864, -0.009871904738247395],
               [0.33243677020072937, 0.022573914378881454, -0.9428553581237793]])
# forward = x - origin
forward = np.array([0.33243677020072937, 0.022573914378881454, -0.9428553581237793])
origin = np.array([ -0.8367999667889383,0.017018394869192363, 2.566997504832856])
print(forward+origin)

print('need to be -0.8367999667889383,0.017018394869192363, 2.566997504832856')